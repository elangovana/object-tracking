{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Deploys code pipeline",
  "Metadata": {},
  "Parameters": {
    "codeBuildProjectName": {
      "Description": "The code build project name",
      "Type": "String"
    },
    "sourceRepository": {
      "Description": "The code commit clone url",
      "Type": "String"
    },
    "codeBranch": {
      "Description": "The code branch, e.g. master",
      "Type": "String",
      "Default": "mainline"
    },
    "buildImage": {
      "Description": "The python build image",
      "Type": "String",
      "Default": "aws/codebuild/python:3.6.5"
    },
    "buildArtifactsS3Bucket": {
      "Description": "The s3 bucket where artifacts will be placed post build",
      "Type": "String"
    },
    "buildArtifactsS3Key": {
      "Description": "The s3 key within the bucket where artifacts will be placed post build",
      "Type": "String"
    },
    "dockerImageRepository": {
      "Description": "The docker image repo to push the image to",
      "Type": "String"
    },
    "SageMakerPytorchBaseImageAccount": {
      "Description": "The offical SageMaker pytorch docker image repo account to pull base image from",
      "Type": "String",
      "Default": "520713654638"
    }
  },
  "Mappings": {},
  "Conditions": {},
  "Resources": {
    "CodeBuild": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Location": {
            "Ref": "buildArtifactsS3Bucket"
          },
          "Name": {
            "Ref": "codeBuildProjectName"
          },
          "Path": {
            "Ref": "buildArtifactsS3Key"
          },
          "Type": "S3"
        },
        "Description": "Builds Pytorch custom container",
        "Environment": {
          "Type": "LINUX_CONTAINER",
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": {
            "Ref": "buildImage"
          },
          "PrivilegedMode": "True"
        },
        "Name": {
          "Ref": "codeBuildProjectName"
        },
        "ServiceRole": {
          "Ref": "codeBuildIamRole"
        },
        "Source": {
          "Location": {
            "Ref": "sourceRepository"
          },
          "Type": "CODECOMMIT",
          "GitCloneDepth": 1
        },
        "Tags": [
          {
            "Key": "StackName",
            "Value": "AWS::StackName"
          }
        ],
        "TimeoutInMinutes": 20
      }
    },
    "codeBuildIamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codebuild.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "S3PutArtifactsPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "buildArtifactsS3Bucket"
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:ListBucket"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "buildArtifactsS3Bucket"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          },
          {
            "PolicyName": "CloudWatchLogsFullAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "logs:*"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "ECRPutImage",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ecr:PutImage",
                    "ecr:InitiateLayerUpload",
                    "ecr:UploadLayerPart",
                    "ecr:CompleteLayerUpload",
                    "ecr:BatchCheckLayerAvailability"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:ecr:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":repository/",
                          {
                            "Ref": "dockerImageRepository"
                          }
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ecr:GetAuthorizationToken"
                  ],
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "CodeCommitRead",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "codecommit:GetTree",
                    "codecommit:ListPullRequests",
                    "codecommit:GetBlob",
                    "codecommit:GetReferences",
                    "codecommit:DescribeMergeConflicts",
                    "codecommit:GetPullRequestApprovalStates",
                    "codecommit:ListTagsForResource",
                    "codecommit:BatchDescribeMergeConflicts",
                    "codecommit:GetCommentsForComparedCommit",
                    "codecommit:GetCommit",
                    "codecommit:GetComment",
                    "codecommit:GetCommitHistory",
                    "codecommit:GetCommitsFromMergeBase",
                    "codecommit:BatchGetCommits",
                    "codecommit:DescribePullRequestEvents",
                    "codecommit:GetPullRequest",
                    "codecommit:GetPullRequestOverrideState",
                    "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
                    "codecommit:ListBranches",
                    "codecommit:GetRepositoryTriggers",
                    "codecommit:BatchGetRepositories",
                    "codecommit:GitPull",
                    "codecommit:GetCommentsForPullRequest",
                    "codecommit:CancelUploadArchive",
                    "codecommit:GetObjectIdentifier",
                    "codecommit:GetFolder",
                    "codecommit:BatchGetPullRequests",
                    "codecommit:GetFile",
                    "codecommit:GetUploadArchiveStatus",
                    "codecommit:EvaluatePullRequestApprovalRules",
                    "codecommit:GetDifferences",
                    "codecommit:GetRepository",
                    "codecommit:GetBranch",
                    "codecommit:GetMergeConflicts",
                    "codecommit:GetMergeCommit",
                    "codecommit:GetMergeOptions"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:codecommit:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":",
                          {
                            "Fn::Select": [
                              5,
                              {
                                "Fn::Split": [
                                  "/",
                                  {
                                    "Ref": "sourceRepository"
                                  }
                                ]
                              }
                            ]
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ecr:GetAuthorizationToken"
                  ],
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "ECRSageMakerImage",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ecr:DescribeRepositories",
                    "ecr:ListImages",
                    "ecr:BatchCheckLayerAvailability",
                    "ecr:GetLifecyclePolicyPreview",
                    "ecr:DescribeImages",
                    "ecr:GetLifecyclePolicy",
                    "ecr:ListTagsForResource",
                    "ecr:BatchGetImage",
                    "ecr:GetDownloadUrlForLayer"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:ecr:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "SageMakerPytorchBaseImageAccount"
                          },
                          ":repository/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ecr:GetAuthorizationToken"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "_CodeBuildIamRole"
            ]
          ]
        }
      }
    },
    "ecrrepo": {
      "Type": "AWS::ECR::Repository",
      "Properties": {
        "RepositoryName": {
          "Ref": "dockerImageRepository"
        }
      }
    },
    "CodePipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "ArtifactStore": {
          "Location": {
            "Ref": "buildArtifactsS3Bucket"
          },
          "Type": "S3"
        },
        "Name": {
          "Fn::Join": [
            "_",
            [
              "CodePipeline",
              {
                "Ref": "codeBuildProjectName"
              }
            ]
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "codePipelineIamRole",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1"
                },
                "Configuration": {
                  "RepositoryName": {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "sourceRepository"
                          }
                        ]
                      }
                    ]
                  },
                  "BranchName": {
                    "Ref": "codeBranch"
                  },
                  "PollForSourceChanges": "False"
                },
                "OutputArtifacts": [
                  {
                    "Name": "sourcecode"
                  }
                ],
                "Name": "SourceCode"
              }
            ],
            "Name": "SourceCode"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "codeBuildProjectName"
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "sourcecode"
                  }
                ],
                "Name": "Build"
              }
            ],
            "Name": "Build"
          }
        ]
      }
    },
    "AmazonCloudWatchEventRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.codecommit"
          ],
          "detail-type": [
            "CodeCommit Repository State Change"
          ],
          "resources": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:aws:codecommit:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "sourceRepository"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          "detail": {
            "event": [
              "referenceCreated",
              "referenceUpdated"
            ],
            "referenceType": [
              "branch"
            ],
            "referenceName": [
              {
                "Ref": "codeBranch"
              }
            ]
          }
        },
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:codepipeline:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "CodePipeline"
                  }
                ]
              ]
            },
            "RoleArn": {
              "Fn::GetAtt": [
                "AmazonCloudWatchEventRole",
                "Arn"
              ]
            },
            "Id": {
              "Fn::Join": [
                "",
                [
                  "codepipeline-",
                  {
                    "Ref": "CodePipeline"
                  }
                ]
              ]
            }
          }
        ]
      }
    },
    "AmazonCloudWatchEventRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "events.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "cwe-pipeline-execution",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "codepipeline:StartPipelineExecution",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:codepipeline:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":",
                        {
                          "Ref": "CodePipeline"
                        }
                      ]
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "codePipelineIamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codepipeline.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "CodePipelineDefaultPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "iam:PassRole"
                  ],
                  "Resource": "*",
                  "Effect": "Allow",
                  "Condition": {
                    "StringEqualsIfExists": {
                      "iam:PassedToService": [
                        "cloudformation.amazonaws.com",
                        "elasticbeanstalk.amazonaws.com",
                        "ec2.amazonaws.com",
                        "ecs-tasks.amazonaws.com"
                      ]
                    }
                  }
                },
                {
                  "Action": [
                    "codecommit:CancelUploadArchive",
                    "codecommit:GetBranch",
                    "codecommit:GetCommit",
                    "codecommit:GetUploadArchiveStatus",
                    "codecommit:UploadArchive"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "codedeploy:CreateDeployment",
                    "codedeploy:GetApplication",
                    "codedeploy:GetApplicationRevision",
                    "codedeploy:GetDeployment",
                    "codedeploy:GetDeploymentConfig",
                    "codedeploy:RegisterApplicationRevision"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "codestar-connections:UseConnection"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "elasticbeanstalk:*",
                    "ec2:*",
                    "elasticloadbalancing:*",
                    "autoscaling:*",
                    "cloudwatch:*",
                    "s3:*",
                    "sns:*",
                    "cloudformation:*",
                    "rds:*",
                    "sqs:*",
                    "ecs:*"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:ListFunctions"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "opsworks:CreateDeployment",
                    "opsworks:DescribeApps",
                    "opsworks:DescribeCommands",
                    "opsworks:DescribeDeployments",
                    "opsworks:DescribeInstances",
                    "opsworks:DescribeStacks",
                    "opsworks:UpdateApp",
                    "opsworks:UpdateStack"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "cloudformation:CreateStack",
                    "cloudformation:DeleteStack",
                    "cloudformation:DescribeStacks",
                    "cloudformation:UpdateStack",
                    "cloudformation:CreateChangeSet",
                    "cloudformation:DeleteChangeSet",
                    "cloudformation:DescribeChangeSet",
                    "cloudformation:ExecuteChangeSet",
                    "cloudformation:SetStackPolicy",
                    "cloudformation:ValidateTemplate"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "codebuild:BatchGetBuilds",
                    "codebuild:StartBuild"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "devicefarm:ListProjects",
                    "devicefarm:ListDevicePools",
                    "devicefarm:GetRun",
                    "devicefarm:GetUpload",
                    "devicefarm:CreateUpload",
                    "devicefarm:ScheduleRun"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "servicecatalog:ListProvisioningArtifacts",
                    "servicecatalog:CreateProvisioningArtifact",
                    "servicecatalog:DescribeProvisioningArtifact",
                    "servicecatalog:DeleteProvisioningArtifact",
                    "servicecatalog:UpdateProduct"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "cloudformation:ValidateTemplate"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ecr:DescribeImages"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "_CodePipelineIamRole"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
  }
}

